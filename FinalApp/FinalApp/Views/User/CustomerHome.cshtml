@model FinalApp.ViewModels.CustomerHomeViewModel


@{
    ViewData["Title"] = "Customer Home";
    var userName = ViewBag.UserName as string;
    var items = ViewBag.Items as IEnumerable<FinalApp.Models.Item>;
    var searchQuery = ViewBag.SearchQuery as string;
    var userId = ViewBag.UserId != null ? (Guid)ViewBag.UserId : Guid.Empty;
    var selectedItemCount = ViewBag.SelectedItemCount != null ? (int)ViewBag.SelectedItemCount : 0;
    var profileImagePath = ViewBag.ProfileImagePath as string;


    var flag = ViewBag.flag != null ? (bool)ViewBag.flag : false;

    ViewBag.HideNav = flag; 
}




<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <style>
        
        body, h1, h2, h3, h4, h5, h6, p, ul, ol, li {
            margin: 0;
            padding: 0;
            list-style: none;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

       
        body {
            background: linear-gradient(to right, #e0eafc, #cfdef3);
            color: #333;
            font-size: 16px;
            line-height: 1.6;
            margin: 0;
            padding: 0;
        }


        .container {
            width: 100%;
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }

 
        .navbar-custom {
            background: linear-gradient(to right, #007bff, #0056b3);
            padding: 15px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

            .navbar-custom .navbar-brand,
            .navbar-custom .navbar-nav .nav-link {
                color: #fff;
                font-weight: bold;
            }

            .navbar-custom .navbar-nav .nav-link {
                margin-right: 15px;
            }

                .navbar-custom .navbar-nav .nav-link:hover {
                    color: #ddd;
                }

       
        .profile-image {
            width: 120px;
            height: 120px;
            border-radius: 50%;
            object-fit: cover;
            border: 3px solid #007bff;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            margin-bottom: 20px;
        }

  
        .card {
            border: none;
            border-radius: 15px;
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.1);
            background: #fff;
            padding: 20px;
            margin-bottom: 20px;
        }

        .card-header {
            background-color: #007bff;
            color: #fff;
            padding: 15px;
            border-radius: 15px 15px 0 0;
            text-align: center;
        }

        .card-body {
            padding: 20px;
        }

 
        .btn-custom,
        .btn-info,
        .btn-danger,
        .btn-primary,
        .btn-success {
            color: #fff;
            border-radius: 25px;
            padding: 10px 20px;
            transition: background-color 0.3s, box-shadow 0.3s;
            font-weight: bold;
        }

        .btn-custom {
            background-color: #007bff;
        }

        .btn-info {
            background-color: #17a2b8;
        }

        .btn-danger {
            background-color: #dc3545;
        }

        .btn-primary {
            background-color: #007bff;
        }

        .btn-success {
            background-color: #28a745;
        }

            .btn-custom:hover,
            .btn-info:hover,
            .btn-danger:hover,
            .btn-primary:hover,
            .btn-success:hover {
                box-shadow: 0 6px 12px rgba(0, 0, 0, 0.2);
                opacity: 0.9;
            }

    
        .search-form {
            margin-bottom: 20px;
        }

            .search-form .form-control {
                border-radius: 25px;
                padding: 10px 15px;
                border: 1px solid #007bff;
                font-size: 16px;
            }

            .search-form .btn {
                border-radius: 25px;
                padding: 10px 20px;
            }


        .item-card {
            border: 1px solid #ddd;
            border-radius: 10px;
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.1);
            padding: 15px;
            margin-bottom: 15px;
            background: #fff;
            transition: transform 0.3s, box-shadow 0.3s;
        }

            .item-card:hover {
                transform: translateY(-5px);
                box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
            }

            .item-card h5 {
                font-size: 1.25rem;
                color: #333;
                margin-bottom: 10px;
            }

            .item-card p {
                color: #555;
                margin-bottom: 10px;
            }

       
        table {
            width: 100%;
            border-collapse: collapse;
            margin-bottom: 20px;
        }

        th, td {
            padding: 10px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }

        th {
            background-color: #007bff;
            color: #fff;
            font-weight: bold;
        }

        tr:hover {
            background-color: #f1f1f1;
        }

       
        .text-center {
            text-align: center;
        }

        .mb-0 {
            margin-bottom: 0;
        }

        .mb-4 {
            margin-bottom: 1.5rem;
        }

        .mt-4 {
            margin-top: 1.5rem;
        }

        .list-group-item {
            border: none;
            padding: 15px;
        }

        .item-card {
            border: 1px solid #ddd;
            border-radius: 10px;
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.1);
            padding: 15px;
            margin-bottom: 15px;
            background: #fff;
            display: flex;
            align-items: center;
            transition: transform 0.3s, box-shadow 0.3s;
        }

            .item-card:hover {
                transform: translateY(-5px);
                box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
            }

            .item-card img {
                max-width: 150px;
                height: auto;
                margin-left: auto; 
            }

        .item-card-content {
            flex: 1;
            margin-right: 20px; 
        }

        .item-card h5 {
            font-size: 1.25rem;
            color: #333;
            margin-bottom: 10px;
        }

        .item-card p {
            color: #555;
            margin-bottom: 10px;
        }

        .purchase-message {
            font-size: 1.5rem;
            font-weight: bold;
            color: #28a745;
            text-align: center;
            margin-top: 20px;
        }

        .back-home-btn {
            font-size: 1rem;
            padding: 10px 20px;
            background-color: #ffc107;
            border: none;
            border-radius: 5px;
            color: #fff;
            transition: background-color 0.3s ease;
        }

            .back-home-btn:hover {
                background-color: #e0a800;
                color: #ffffff;
            }

    </style>
</head>

<body>

    <nav class="navbar navbar-expand-lg navbar-custom">
        <div class="container-fluid">
            
            <a class="navbar-brand" href="#">TradeStream</a>
            
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav"
                aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav ms-auto">
                    @if (!string.IsNullOrEmpty(userName))
                    {
                        <li class="nav-item">
                            <a class="nav-link text-white" href="#">Welcome, @userName!</a>
                        </li>
                    }
                   
                    @if (flag){
                        <li class="nav-item d-none">
                        <button class="btn btn-link nav-link text-white" onclick="submitCartForm()">
                            <i class="fa-solid fa-cart-shopping"></i> Cart (<span id="cartCount">@selectedItemCount</span>)
                        </button>
                    </li>
                    }
                    else{
                        <li class="nav-item ">
                            <button class="btn btn-link nav-link text-white" onclick="submitCartForm()">
                                <i class="fa-solid fa-cart-shopping"></i> Cart (<span id="cartCount">@selectedItemCount</span>)
                            </button>
                        </li>
                    }
                    
                    @if (!flag)
                    {

                        <li class="nav-item">
                            <a class="nav-link text-white" href="/User/Logout">Logout</a>
                        </li>
                    }

                </ul>
            </div>
        </div>
    </nav>

    <div class="container my-4">
        <div class="card">
            <div class="card-header text-center">
                <h1 class="mb-0">Customer Home</h1>
            </div>
            <div class="card-body">
                <h5 class="text-center">You have successfully logged in as a customer.</h5>
                @if (!string.IsNullOrEmpty(userName))
                {
                    <h2 class="text-center">Welcome, @userName!</h2>
                }
                else
                {
                    <p class="text-center">Welcome!</p>
                }

  
                @if (!string.IsNullOrEmpty(profileImagePath))
                {
                    <div class="text-center">
                        <img src="@profileImagePath" alt="Profile Image" class="profile-image" />
                    </div>
                }

   
                @if (!flag){
                    <div class="text-center mb-4">
                        <a href="@Url.Action("EditProfile", new { userId = userId })" class="btn btn-info">
                            Update Your Information
                        </a>
                    </div>
                
                }

                @if (!flag)
                {
                    <form method="get" asp-action="CustomerHome" class="search-form">
                        <div class="input-group">
                            <input type="hidden" name="userId" value="@userId" />
                            <input type="text" name="searchQuery" class="form-control" placeholder="Search items..."
                            value="@searchQuery" />
                            <button type="submit" class="btn btn-custom">Search</button>
                        </div>
                    </form>
                }
                @if (!flag)
                {
                    <h2>Items</h2>
                }
                @if (items != null && items.Any() && @flag == false)
                {
                    <form id="cartForm" method="post" asp-action="SelectedItems">
                        @foreach (var item in items)
                        {
                            <li class="item-card list-group-item p-3">
                                <div class="item-card-content">
                                    <input type="checkbox" class="item-checkbox" name="selectedItems" value="@item.ItemId" />
                                    <input type="hidden" name="userId" value="@userId" />
                                    <h5>@item.ItemName</h5>
                                    <p><strong>Price:</strong> $@item.Price</p>
                                    <p><strong>Description:</strong> @item.Description</p>
                                </div>
                                @if (!string.IsNullOrEmpty(item.ItemImagePath))
                                {
                                    <img src="@item.ItemImagePath" alt="@item.ItemName" class="item-image" />
                                }
                            </li>
                        }

                        <div class="text-center mt-4">
                            <button type="submit" class="btn btn-primary" onclick="return validateCart();">Check Cart</button>
                        </div>
                    </form>


                }
                else
                {
             
                    <p class="purchase-message">Purchase Successful</p>
                    <div class="text-center mt-4">
                        <button id="resetButton" class="btn btn-warning back-home-btn">Back To The Home Page</button>
                    </div>

                }

  
                @if (!flag)
                {
                    <div class="text-center mt-4">
                        <a href="/User/Logout" class="btn btn-danger">Logout</a>
                    </div>
                }
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>





    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const userId = '@userId'; 
            const storageKey = `selectedItems_${userId}`;

   
            const savedSelectedItems = JSON.parse(localStorage.getItem(storageKey)) || [];
            updateCheckboxes(savedSelectedItems);
            updateCartCount(savedSelectedItems.length);


            document.querySelectorAll('.item-checkbox').forEach(function (checkbox) {
                checkbox.addEventListener('change', function () {
                    const selectedItems = getSelectedItems();
                    localStorage.setItem(storageKey, JSON.stringify(selectedItems));
                    updateCartCount(selectedItems.length);
                });
            });


            document.getElementById('resetButton').addEventListener('click', function () {
                resetItemsAndRedirect();
            });

            function getSelectedItems() {
                return Array.from(document.querySelectorAll('.item-checkbox:checked')).map(checkbox => checkbox.value);
            }

            function updateCheckboxes(selectedItems) {
                document.querySelectorAll('.item-checkbox').forEach(function (checkbox) {
                    checkbox.checked = selectedItems.includes(checkbox.value);
                });
            }

            function updateCartCount(count) {
                document.getElementById('cartCount').textContent = count;
            }

            function resetItemsAndRedirect() {
   
                document.querySelectorAll('.item-checkbox').forEach(function (checkbox) {
                    checkbox.checked = false;
                });

                
                localStorage.removeItem(storageKey);

 
                updateCartCount(0);

 
                window.location.href = `/User/CustomerHome?userId=${userId}`;
            }
        });

        function submitCartForm() {
            const cartCount = document.getElementById('cartCount').textContent;
            if (parseInt(cartCount) === 0) {
                alert('Please choose an item.');
            } else {
                document.getElementById('cartForm').submit();
            }
        }

        function validateCart() {
            const selectedItems = document.querySelectorAll('.item-checkbox:checked').length;
            if (selectedItems === 0) {
                alert('Please choose an item.');
                return false;
            }
            return true;
        }
    </script>







</body>

</html>
